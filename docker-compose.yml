version: '3.7'

services:
  frontend:
    build:
      context: ./frontend/tp-warafi
      dockerfile: Dockerfile
    volumes:
      - ./frontend/tp-warafi:/frontend/tp-warafi
    ports:
      - "3000:3000"

  db:
    image: mysql:8.2
    container_name: database_container
    restart: always
    volumes:
      - data:/var/lib/mysql
    environment:
      MYSQL_HOST: 'db'
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_DATABASE: 'dataliink'
      MYSQL_PASSWORD: ''
    ports:
      - "3306:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 3
 

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch_container
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    restart: always

  backend:
    build:
      context: ./backend/warafi
      dockerfile: Dockerfile
    container_name: backend_container
    command: sh -c "python3 manage.py makemigrations --noinput && python3 manage.py migrate --noinput && python3 manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"
    restart: always
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - elasticsearch
   

volumes:
  data:
